# Defines the following variables:
#   @PROJECT_NAME@_VERSION_MAJOR
#   @PROJECT_NAME@_VERSION_MINOR
#   @PROJECT_NAME@_VERSION_PATCH
#   @PROJECT_NAME@_VERSION
#   @PROJECT_NAME_UPPER@_BINARY_DIR
#   @PROJECT_NAME_UPPER@_DEFINITIONS
#   @PROJECT_NAME_UPPER@_INCLUDE_DIRS
#   @PROJECT_NAME_UPPER@_LIBRARIES
#   @PROJECT_NAME_UPPER@_FOUND

# Set version variables
set( @PROJECT_NAME@_VERSION_MAJOR @BRAINVISA_PACKAGE_VERSION_MAJOR@ )
set( @PROJECT_NAME@_VERSION_MINOR @BRAINVISA_PACKAGE_VERSION_MINOR@ )
set( @PROJECT_NAME@_VERSION_PATCH @BRAINVISA_PACKAGE_VERSION_PATCH@ )
set( @PROJECT_NAME@_VERSION @BRAINVISA_PACKAGE_VERSION_MAJOR@.@BRAINVISA_PACKAGE_VERSION_MINOR@.@BRAINVISA_PACKAGE_VERSION_PATCH@ )
# Set @PROJECT_NAME_UPPER@_BINARY_DIR
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )

find_package( Doxygen )
find_package( Sigc++2 REQUIRED )
find_package( LibXml2 REQUIRED )
find_package( Boost REQUIRED )

# Bla
set( @PROJECT_NAME_UPPER@_DEFINITIONS @SOMA-IO_DEFINITIONS@ )
set( @PROJECT_NAME_UPPER@_INCLUDE_DIRS
     "${@PROJECT_NAME_UPPER@_BINARY_DIR}/include"
     ${Sigc++2_INCLUDE_DIRS} 
     "${LIBXML2_INCLUDE_DIR}"
     ${Boost_INCLUDE_DIRS} )


if( @PROJECT_NAME@_IS_BEING_COMPILED )
  set( SOMA_CARTOBASE_LIB cartobase )
else( @PROJECT_NAME@_IS_BEING_COMPILED )
  find_library( SOMA_CARTOBASE_LIB cartobase "${@PROJECT_NAME_UPPER@_BINARY_DIR}/lib" )
endif( @PROJECT_NAME@_IS_BEING_COMPILED )
set( @PROJECT_NAME_UPPER@_LIBRARIES "${SOMA_CARTOBASE_LIB}" "${LIBXML2_LIBRARIES}" )

set( @PROJECT_NAME_UPPER@_FOUND true )

