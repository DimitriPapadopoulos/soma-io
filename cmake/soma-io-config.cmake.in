# Defines the following variables:
#   @PROJECT_NAME@_VERSION_MAJOR
#   @PROJECT_NAME@_VERSION_MINOR
#   @PROJECT_NAME@_VERSION_PATCH
#   @PROJECT_NAME@_VERSION
#   @PROJECT_NAME_UPPER@_BINARY_DIR
#   @PROJECT_NAME_UPPER@_DEFINITIONS
#   @PROJECT_NAME_UPPER@_INCLUDE_DIRS
#   @PROJECT_NAME_UPPER@_LIBRARIES
#   @PROJECT_NAME_UPPER@_FOUND

# Set version variables
set( @PROJECT_NAME@_VERSION_MAJOR @BRAINVISA_PACKAGE_VERSION_MAJOR@ )
set( @PROJECT_NAME@_VERSION_MINOR @BRAINVISA_PACKAGE_VERSION_MINOR@ )
set( @PROJECT_NAME@_VERSION_PATCH @BRAINVISA_PACKAGE_VERSION_PATCH@ )
set( @PROJECT_NAME@_VERSION @BRAINVISA_PACKAGE_VERSION_MAJOR@.@BRAINVISA_PACKAGE_VERSION_MINOR@.@BRAINVISA_PACKAGE_VERSION_PATCH@ )
# Set @PROJECT_NAME_UPPER@_BINARY_DIR
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )
get_filename_component( @PROJECT_NAME_UPPER@_BINARY_DIR "${@PROJECT_NAME_UPPER@_BINARY_DIR}" PATH )
# Set use file
set( @PROJECT_NAME_UPPER@_USE_FILE "${@PROJECT_NAME_UPPER@_BINARY_DIR}/share/@PROJECT_NAME@-@BRAINVISA_PACKAGE_VERSION_MAJOR@.@BRAINVISA_PACKAGE_VERSION_MINOR@/cmake/@PROJECT_NAME@-use.cmake" )

find_package( Doxygen )
find_package( Sigc++2 REQUIRED )
find_package( LibXml2 REQUIRED )
find_package( Boost REQUIRED )
find_package( OpenSlide )

# Bla
set( @PROJECT_NAME_UPPER@_DEFINITIONS @SOMA-IO_DEFINITIONS@ )
set( @PROJECT_NAME_UPPER@_INCLUDE_DIRS
     "${@PROJECT_NAME_UPPER@_BINARY_DIR}/include"
     ${Sigc++2_INCLUDE_DIRS} 
     "${LIBXML2_INCLUDE_DIR}"
     ${Boost_INCLUDE_DIRS} )

if( @PROJECT_NAME@_IS_BEING_COMPILED )
  set( SOMA_CARTOBASE_LIB cartobase )
  set( SOMA_CARTOBASE_LIBRARIES "cartobase" "cartobase_1" "cartobase_0" 
    ${LIBXML2_LIBRARIES} ${Sigc++2_LIBRARIES} )
  if(UNIX)
    set( SOMA_CARTOBASE_LIBRARIES ${SOMA_CARTOBASE_LIBRARIES} "m" "pthread" )
  endif(UNIX)
  if( WIN32 )
    set( SOMA_CARTOBASE_LIBRARIES ${SOMA_CARTOBASE_LIBRARIES} "wsock32" )
  endif( WIN32 )
  set( @PROJECT_NAME_UPPER@_LIBRARIES "soma-io" ${SOMA_CARTOBASE_LIBRARIES} )

else( @PROJECT_NAME@_IS_BEING_COMPILED )
  find_library( SOMA_CARTOBASE_LIB cartobase "${@PROJECT_NAME_UPPER@_BINARY_DIR}/lib" )
  find_library( _cartobase1_lib cartobase1 "${@PROJECT_NAME_UPPER@_BINARY_DIR}/lib" )
  find_library( _cartobase0_lib cartobase0 "${@PROJECT_NAME_UPPER@_BINARY_DIR}/lib" )
  find_library( _somaio_lib "soma-io" "${@PROJECT_NAME_UPPER@_BINARY_DIR}/lib" )

  set( SOMA_CARTOBASE_LIBRARIES "${SOMA_CARTOBASE_LIB}" "${_cartobase1_lib}" "${_cartobase0_lib}" ${LIBXML2_LIBRARIES} ${Sigc++2_LIBRARIES} )
  if(UNIX)
    set( SOMA_CARTOBASE_LIBRARIES ${SOMA_CARTOBASE_LIBRARIES} "m" "pthread" )
  endif(UNIX)
  if( WIN32 )
    set( SOMA_CARTOBASE_LIBRARIES ${SOMA_CARTOBASE_LIBRARIES} "wsock32" )
  endif( WIN32 )

  set( @PROJECT_NAME_UPPER@_LIBRARIES "${_somaio_lib}" ${SOMA_CARTOBASE_LIBRARIES} )

endif( @PROJECT_NAME@_IS_BEING_COMPILED )

set( @PROJECT_NAME_UPPER@_FOUND true )

